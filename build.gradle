apply plugin: 'java'
apply plugin: 'eclipse'

version = ''

// apply from: 'gradle/maven.gradle'
defaultTasks = ['assemble']

sourceCompatibility = '1.7'
targetCompatibility = '1.7'

archivesBaseName = 'batchSample'

repositories {
	mavenCentral()
	mavenLocal()
}

eclipse {
	classpath {
		downloadSources=true
	}
}

String springVersion = '4.2.4.RELEASE'
String springBatchVersion = '3.0.6.RELEASE'
String logbackVersion = '1.1.3'

dependencies {
	compile 'commons-configuration:commons-configuration:1.6'
	compile "commons-dbcp:commons-dbcp:1.4"
	compile "commons-pool:commons-pool:1.6"
	compile 'org.slf4j:slf4j-api:1.7.12'
	runtime 'org.slf4j:jcl-over-slf4j:1.7.12'
	compile 'ch.qos.logback:logback-core:' + logbackVersion
	compile 'ch.qos.logback:logback-classic:' + logbackVersion
    compile 'org.springframework:spring-core:' + springVersion
    compile 'org.springframework:spring-oxm:' + springVersion
	compile 'org.springframework:spring-jdbc:' + springVersion
	compile 'org.springframework.batch:spring-batch-core:' + springBatchVersion
	compile 'org.springframework.batch:spring-batch-infrastructure:' + springBatchVersion
	testCompile 'org.springframework:spring-test:' + springVersion
	compile 'org.springmodules:spring-modules-jakarta-commons:0.8'
	compile 'com.h2database:h2:1.4.191'
	testCompile 'junit:junit:4.12'
}

final String DEFAULT_PROFILE = 'develop'
allprojects {
	if (!project.hasProperty('profile') || !profile) {
		ext.profile = DEFAULT_PROFILE
	}
    sourceSets {
        main {
            resources {
                srcDir "config/${profile}"
            }
        }
    }
}

// other expresstion
/*
final String DEFAULT_PROFILE = 'config/develop'

allprojects {
	if(project.hasProperty('profile') && profile == "staging") {
		ext.profile = "/home/ioBatch/batchSample/config/staging"
	} else if(project.hasProperty('profile') && profile == "product") {
		ext.profile = "/home/ioBatch/batchSample/config/product"
	} else {
		ext.profile = DEFAULT_PROFILE
	}

    sourceSets {
        main {
            resources {
                srcDir "${profile}"
            }
        }
    }
}
*/

//  gradle zip -Pprofile=staging
task zip(type: Zip) {
	from 'src/dist'
	from jar.outputs.files
	baseName = 'batchSample'
	into('libs') {
		from configurations.runtime
	}
}

// Command is
// gradle zip
zip.dependsOn(assemble)
//assemble.dependsOn(zip)

// $ gradle wrapper
// $ gradlew zip
// $ gradlew zip -Pprofile=staging
task wrapper(type: Wrapper) {
	gradleVersion = '2.3'
}
