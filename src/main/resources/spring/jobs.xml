<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:batch="http://www.springframework.org/schema/batch"
	xmlns:util="http://www.springframework.org/schema/util"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/batch http://www.springframework.org/schema/batch/spring-batch.xsd
		http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd">

	<!-- stored job-meta in memory -->
	<!--  
	<bean id="jobRepository"
		class="org.springframework.batch.core.repository.support.MapJobRepositoryFactoryBean">
		<property name="transactionManager" ref="transactionManager" />
	</bean>
 	 -->

	<!-- stored job-meta in database -->
	<bean id="jobRepository"
		class="org.springframework.batch.core.repository.support.JobRepositoryFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="transactionManager" ref="transactionManager" />
		<property name="databaseType" value="h2" />
	</bean>

	<bean id="transactionManager"
		class="org.springframework.batch.support.transaction.ResourcelessTransactionManager" />

	<bean id="jobLauncher"
		class="org.springframework.batch.core.launch.support.SimpleJobLauncher">
		<property name="jobRepository" ref="jobRepository" />
	</bean>

	<!-- Step 1 -->
	<bean id="cvsFileItemReader" class="org.springframework.batch.item.file.FlatFileItemReader">
		<property name="resource" value="classpath:input/report.csv" />
		<property name="lineMapper">
		    <bean class="org.springframework.batch.item.file.mapping.DefaultLineMapper">
			<property name="lineTokenizer">
				<bean class="org.springframework.batch.item.file.transform.DelimitedLineTokenizer">
					<property name="names" value="id,sales,qty,staffName,date" />
				</bean>
			</property>
			<property name="fieldSetMapper">
				<bean class="io.sample.batch.mapper.ReportFieldSetMapper" />
				 <!-- if no data type conversion, use BeanWrapperFieldSetMapper to map by name
				<bean
					class="org.springframework.batch.item.file.mapping.BeanWrapperFieldSetMapper">
					<property name="prototypeBeanName" value="report" />
				</bean>
				 -->
			</property>
		    </bean>
		</property>
	</bean>
	<bean id="itemProcessor" class="io.sample.batch.step.processor.CustomItemProcessor" />
	<bean id="xmlItemWriter" class="org.springframework.batch.item.xml.StaxEventItemWriter">
		<property name="resource" value="file:files/outputs/report.xml" />
		<property name="marshaller" ref="reportMarshaller" />
		<property name="rootTagName" value="report" />
	</bean>
	<bean id="report" class="io.sample.batch.bean.Report" scope="prototype" />
	<bean id="reportMarshaller" class="org.springframework.oxm.jaxb.Jaxb2Marshaller">
	   <property name="classesToBeBound">
		<list>
			<value>io.sample.batch.bean.Report</value>
		</list>
	    </property>
	</bean>

	<!-- Step 2 -->
	<bean id="selectItemReader" class="org.springframework.batch.item.database.JdbcCursorItemReader">
		<property name="dataSource" ref="myDataSource" />
		<property name="sql" ref="selectSqlReader" />
		<property name="rowMapper" ref="rowMapper"/>
	</bean>
	<bean id="rowMapper" class="org.springframework.jdbc.core.BeanPropertyRowMapper">
		<property name="mappedClass" value="io.sample.batch.bean.model.Users"/>
	</bean>
	<bean id="logicItemProcessor" class="io.sample.batch.step.processor.LogicItemProcessor" />
	<bean id="insertItemWriter" class="org.springframework.batch.item.database.JdbcBatchItemWriter">
		<property name="dataSource" ref="myDataSource" />
		<property name="sql" ref="insertSqlWriter" />
		<!-- It will take care matching between object property and sql name parameter -->
		<property name="itemSqlParameterSourceProvider">
			<bean class="org.springframework.batch.item.database.BeanPropertyItemSqlParameterSourceProvider" />
		</property>
	</bean>

	<batch:job id="helloWorldJob">
		<batch:step id="step1">
			<batch:tasklet>
				<batch:chunk reader="cvsFileItemReader" processor="itemProcessor" 
					writer="xmlItemWriter" commit-interval="10">
				</batch:chunk>
			</batch:tasklet>
			<batch:next on="*" to="step2"/>
			<batch:end on="STOPED"/>
		</batch:step>

		<batch:step id="step2">
			<batch:tasklet>
				<batch:chunk reader="selectItemReader" processor="logicItemProcessor" 
					writer="insertItemWriter" commit-interval="10">
				</batch:chunk>
			</batch:tasklet>
			<batch:end on="COMPLETED"/>
			<batch:end on="FAILED" exit-code="FAILED"/>
		</batch:step>

	</batch:job>

</beans>